% Open the relevant input file
[status, panel_filename] = system("head sensitivity_filenames.txt | head -n " + index + " | tail -n 1");
panel_data = jsondecode(fileread(fullfile("silicon_sspvt_sensitivity", panel_filename)));

% Open the weather-data inputs
Ta = csvread(fullfile("weather_data", "ambient_temperature_inputs.csv"));
Tcin = csvread(fullfile("weather_data", "coolant_temperature_inputs.csv"));
Tflin = csvread(fullfile("weather_data", "fluid_temperature_inputs.csv"));
GG = csvread(fullfile("weather_data", "irradiance_inputs.csv"));
Vwind = csvread(fullfile("weather_data", "wind_speed_inputs.csv"));

% Pass all of this information to the SSPVT script and save the outputs
[eff_th_fluid, eff_th_cool, eff_th_total, eff_el, T_r, T_sspvt, Energy, P_el, P_th] = sspvt_performance(...
    panel_data.glass_emissivity,...
    panel_data.filter_glass_emissivity,...
    panel_data.filter_glass_emissivity,...
    panel_data.pv_absorptivity,...
    panel_data.pv_emissivity,...
    panel_data.pv_thickness,...
    panel_data.pv_thermal_coefficient,...
    panel_data.pv_reference_efficiency,...
    panel_data.eva_thermal_conductivity,...
    panel_data.eva_thickness,...
    panel_data.adhesive_thermal_conductivity,...
    panel_data.adhesive_thickness,...
    panel_data.insulation_thermal_conductivity,...
    panel_data.insulation_thickness,...
    panel_data.tilt_angle,...
    panel_data.top_glass_to_filter_gap,...
    panel_data.filter_width,...
    panel_data.filter_to_pv_gap,...
    panel_data.coolant_width,...
    Ta,...
    Tcin,...
    Tflin,...
    GG,...
    Vwind...
);

% Save the output data
output_data = struct();
output_data.eff_th_fluid = eff_th_fluid;
output_data.eff_th_cool = eff_th_cool;
output_data.eff_th_total = eff_th_total;
output_data.eff_el = eff_el;
output_data.T_r = T_r;
output_data.T_sspvt = T_sspvt;
output_data.Energy = Energy;
output_data.P_el = P_el;
output_data.P_th = P_th;


fid = fopen(fullfile("sspvt_sensitivity_output", "results_run_" + index + "_" + panel_filename), 'w', 'n', 'UTF-8');
encoded_data = jsonencode(output_data);
fprintf(fid,'%s',encoded_data);
fclose(fid);
